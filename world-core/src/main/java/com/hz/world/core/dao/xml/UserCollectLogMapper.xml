<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
  <mapper namespace="com.hz.world.core.dao.mapper.UserCollectLogMapper" >
    <resultMap id="UserCollectLogResult" type="com.hz.world.core.dao.model.UserCollectLog" >
      <id column="collect_id" property="collectId" jdbcType="INTEGER" />
      <id column="user_id" property="userId" jdbcType="BIGINT" />
      <result column="type" property="type" jdbcType="INTEGER" />
      <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Example_Where_Clause" >
      <where >
        <foreach collection="oredCriteria" item="criteria" separator="or" >
          <if test="criteria.valid" >
            <trim prefix="(" suffix=")" prefixOverrides="and" >
              <foreach collection="criteria.criteria" item="criterion" >
                <choose >
                  <when test="criterion.noValue" >
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue" >
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue" >
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue" >
                    and ${criterion.condition}
                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
      <where >
        <foreach collection="example.oredCriteria" item="criteria" separator="or" >
          <if test="criteria.valid" >
            <trim prefix="(" suffix=")" prefixOverrides="and" >
              <foreach collection="criteria.criteria" item="criterion" >
                <choose >
                  <when test="criterion.noValue" >
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue" >
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue" >
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue" >
                    and ${criterion.condition}
                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </where>
    </sql>
    <sql id="UserCollectLogColumns" >
      collect_id, user_id, type, add_time
    </sql>
    <select id="selectByExample" resultMap="UserCollectLogResult" parameterType="com.hz.world.core.dao.model.UserCollectLogExample" >
      select
      <if test="distinct" >
        distinct
      </if>
      <include refid="UserCollectLogColumns" />
      from user_collect_log
      <if test="_parameter != null" >
        <include refid="Example_Where_Clause" />
      </if>
      <if test="orderByClause != null" >
        order by ${orderByClause}
      </if>
      <if test="mysqlOffset != null" >
        <if test="mysqlLength != null" >
           limit #{mysqlOffset} , #{mysqlLength} 
        </if>
      </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="UserCollectLogResult" parameterType="map" >
      select 
      <include refid="UserCollectLogColumns" />
      from user_collect_log
      where collect_id = #{collectId,jdbcType=INTEGER}
        and user_id = #{userId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="map" >
      delete from user_collect_log
      where collect_id = #{collectId,jdbcType=INTEGER}
        and user_id = #{userId,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.hz.world.core.dao.model.UserCollectLogExample" >
      delete from user_collect_log
      <if test="_parameter != null" >
        <include refid="Example_Where_Clause" />
      </if>
    </delete>
    <insert id="insert" parameterType="com.hz.world.core.dao.model.UserCollectLog" >
      insert into user_collect_log (collect_id, user_id, type, 
        add_time)
      values (#{collectId,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, 
        #{addTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.hz.world.core.dao.model.UserCollectLog" >
      insert into user_collect_log
      <trim prefix="(" suffix=")" suffixOverrides="," >
        <if test="collectId != null" >
          collect_id,
        </if>
        <if test="userId != null" >
          user_id,
        </if>
        <if test="type != null" >
          type,
        </if>
        <if test="addTime != null" >
          add_time,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides="," >
        <if test="collectId != null" >
          #{collectId,jdbcType=INTEGER},
        </if>
        <if test="userId != null" >
          #{userId,jdbcType=BIGINT},
        </if>
        <if test="type != null" >
          #{type,jdbcType=INTEGER},
        </if>
        <if test="addTime != null" >
          #{addTime,jdbcType=TIMESTAMP},
        </if>
      </trim>
    </insert>
    <select id="countByExample" parameterType="com.hz.world.core.dao.model.UserCollectLogExample" resultType="java.lang.Integer" >
      select count(*) from user_collect_log
      <if test="_parameter != null" >
        <include refid="Example_Where_Clause" />
      </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
      update user_collect_log
      <set >
        <if test="record.collectId != null" >
          collect_id = #{record.collectId,jdbcType=INTEGER},
        </if>
        <if test="record.userId != null" >
          user_id = #{record.userId,jdbcType=BIGINT},
        </if>
        <if test="record.type != null" >
          type = #{record.type,jdbcType=INTEGER},
        </if>
        <if test="record.addTime != null" >
          add_time = #{record.addTime,jdbcType=TIMESTAMP},
        </if>
      </set>
      <if test="_parameter != null" >
        <include refid="Update_By_Example_Where_Clause" />
      </if>
    </update>
    <update id="updateByExample" parameterType="map" >
      update user_collect_log
      set collect_id = #{record.collectId,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=BIGINT},
        type = #{record.type,jdbcType=INTEGER},
        add_time = #{record.addTime,jdbcType=TIMESTAMP}
      <if test="_parameter != null" >
        <include refid="Update_By_Example_Where_Clause" />
      </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.hz.world.core.dao.model.UserCollectLog" >
      update user_collect_log
      <set >
        <if test="type != null" >
          type = #{type,jdbcType=INTEGER},
        </if>
        <if test="addTime != null" >
          add_time = #{addTime,jdbcType=TIMESTAMP},
        </if>
      </set>
      where collect_id = #{collectId,jdbcType=INTEGER}
        and user_id = #{userId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hz.world.core.dao.model.UserCollectLog" >
      update user_collect_log
      set type = #{type,jdbcType=INTEGER},
        add_time = #{addTime,jdbcType=TIMESTAMP}
      where collect_id = #{collectId,jdbcType=INTEGER}
        and user_id = #{userId,jdbcType=BIGINT}
    </update>
  </mapper>